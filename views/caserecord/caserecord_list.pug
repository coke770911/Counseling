extends ../layout

block content
  .container
    .row
      .col
      nav(aria-label="breadcrumb")
        ol.breadcrumb
          li.breadcrumb-item 
            a(href="/") 首頁
          li.breadcrumb-item 個案管理
          li.breadcrumb-item.active 個案追蹤清單
    .row
      .col-12.col-md-6.col-lg-4
        .input-group.mb-3
          span.input-group-text(id="inputGroup-memberUid") 學號
          input.form-control(type="text" placeholder="輸入學號" aria-label="輸入學號" aria-describedby="btn-search" name="txt-search" id="txt-search")
          button.btn.btn-outline-secondary(type="button" id="btn-search") 搜尋
      .col-6.col-md-6
        .form-check.mt-1
          input.form-check-input(type="checkbox" id="isNotClose")
          label.form-check-label(for="isNotClose") 篩選未結案
    table.table#maintable
  script.
    let caseTable 
    document.addEventListener('DOMContentLoaded', function() {
      const table = new Tabulator("#maintable", {
        layout : "fitDataFill",
        ajaxURL: "/case",
        ajaxConfig: "get",
        ajaxContentType: "json",
        minHeight: 768,
        maxHeight : "100%",
        layoutColumnsOnNewData : true ,
        placeholder: "查無個管案件資料",
        resizableColumnFit: true,
        pagination: true, //啟用分頁
        paginationSize: 10, //可選參數以請求每頁的特定行數
        columnDefaults: {
          headerHozAlign: "center",
          hozAlign: "center",
          vertAlign: "middle",
          headerSort: false,
        },
        columns: [
          {title: "#", formatter: "rownum", width: 50},
          {title: "學號", field: "memberUid" },
          {title: "學生姓名", field: "memberName"},
          {title: "性別", field: "memberSex"},
          {title: "系所年級", field: "memberDeptFull", hozAlign: "left"},
          {title: "個案身份", field: "refIdentity.content", hozAlign: "left"},
          {title: "個案來源", field: "refSource.content", hozAlign: "left"},
          {title: "個管員", field: "refcaseManage.username"},
          {title: "心理師", field: "refcaseAssign.username"},
          //{title: "建立時間", field: "createdLocal"},
          {title: "案件進度", field: "isCloseName"},
          {title: "功能",field: "id",hozAlign: "left",
            formatter: function(cell ,  formatterParams,aaa ) {
              let value = cell.getValue()
              if(cell.getRow().getData().isClose) {
                return '<a class="btn btn-outline-info mx-1 btn-CloseInfo" type="button" data-caseId="'+value+'" href="/close/view?CaseRecordId='+value+'">查詢結案紀錄</a>'
              } else {
                let buttonString = '<button class="btn btn-outline-primary mx-1 btn-CreatTalk" type="button" data-caseId="'+value+'">晤談</button>'
                if(cell.getRow().getData().hasTalkRecord.length !== 0) {
                  buttonString += '<button class="btn btn-outline-secondary mx-1 btn-CloseCase" type="button" data-caseId="'+value+'">結案</button>'
                }
                if([1,2].indexOf(#{user.auth}) !== -1) {
                  buttonString += '<button class="btn btn-outline-success mx-1 btn-CreatCase" type="button" data-caseId="'+value+'">修改</button>'
                } 
                if([1].indexOf(#{user.auth}) !== -1) {
                  buttonString += '<button class="btn btn-outline-danger mx-1 btn-DelCase" type="button" data-caseId="'+value+'">刪除</button>'
                } 
                return buttonString
              }
            }
          },
        ],
        rowFormatter: function(row){
          let accordion = document.createElement("div");
          accordion.classList.add("accordion");
          let accordion_item = document.createElement("div");
          accordion_item.classList.add("accordion-item");
          let accordion_header = document.createElement("h2");
          accordion_header.classList.add("accordion-header");
          accordion_header.innerHTML = '<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse'+row.getData().id+'" aria-expanded="true" aria-controls="#collapse'+row.getData().id+'">'+row.getData().memberName+' 晤談記錄列表 '+row.getData().hasTalkRecord.length+'筆紀錄</button>'
          let accordion_collapse = document.createElement("div");
          accordion_collapse.id = "collapse"+row.getData().id
          accordion_collapse.classList.add("accordion-collapse");
          accordion_collapse.classList.add("collapse");
          let accordion_body = document.createElement("div");
          accordion.appendChild(accordion_item);
          accordion_item.appendChild(accordion_header);
          accordion_item.appendChild(accordion_collapse);
          accordion_collapse.appendChild(accordion_body);
          let tableEl = document.createElement("div");
          accordion_body.appendChild(tableEl);
          row.getElement().appendChild(accordion);
          let subTable = new Tabulator(tableEl, {
            layout: "fitDataFill",
            placeholder: "尚無晤談記錄",
            data: row.getData().hasTalkRecord,
            columnDefaults: {
              headerHozAlign: "center",
              hozAlign: "center",
              vertAlign: "middle",
              headerSort: false,
            },
            columns:[
              {title: "#", formatter: "rownum", width: 50},
              {title: "填寫紀錄日期", field: "keyinDateLocal", sorter: "date"},
              {title: "填寫紀錄心理師", field: "refkeyinUser.username"},
              {title: "處理方式", field: "refProcess.content"},
              {title: "評估等級", field: "refLevel.content",
                formatter: function(cell, formatterParams) {
                  let value = cell.getValue();
                  let color = '';
                  switch (value) {
                      case '黃':
                          color = '#FFFF93'; // 黃色
                          break;
                      case '橙':
                          color = '#FFA042'; // 橙色
                          break;
                      case '紅':
                          color = '#FF5151'; // 紅色
                          break;
                      default:
                          color = '#A6FFA6'; // 綠色
                  }
                  cell.getElement().style.backgroundColor = color;
                  return value;
                }
              },
              {title: "功能",field: "id",formatter: function(cell ,  formatterParams ){
                  let value = cell.getValue()
                  let buttonString = '<button class="btn btn-outline-success mx-1 btn-infoTalk" type="button" data-talkId="'+value+'">查詢</button>'
                  return buttonString
                }
              },
            ]
          })
        },
      })
      

      document.querySelector('#isNotClose').addEventListener('change',(e) => {
        if(e.target.checked) {
          table.setFilter("isCloseName", "like", "未結案");
        } else {
          table.setFilter("isCloseName", "like", "");
        }
      })

      document.querySelector('#btn-search').addEventListener('click',(e) => {
        mask.show()
        axios.get('/case/'+document.querySelector('#txt-search').value)
        .then((res) => { 
          table.setData(res.data);
        }).catch((error) => { 
          Swal.fire(error.response.data.msg)
        }).finally(() => { 
          mask.hide()
        })
      })

      document.getElementsByTagName("body")[0].addEventListener('click', function (event) {
        let target = event.target
        if(!target.getAttribute("class")) { return }
        //填寫晤談紀錄
        if(target.getAttribute("class").indexOf("btn-CreatTalk") !== -1) {
          if(target.getAttribute("data-caseId")) {
            mask.show()
            let caseId = target.getAttribute("data-caseId");
            let QueryStringObj = {}
            QueryStringObj.CaseRecordId = caseId
            QueryStringObj.CalendarId = 0
            QueryStringObj.RecordId = 0
            axios.get('/case/state/'+caseId).then((res) => { 
              document.location.href = '/talk/view?'+new URLSearchParams(QueryStringObj).toString()
            }).catch((error) => { 
              Swal.fire(error.response.data.msg)
            }).finally(() => { 
              mask.hide()
            })
          }
        }

        //填寫結案紀錄
        if(target.getAttribute("class").indexOf("btn-CloseCase") !== -1) {
          if(target.getAttribute("data-caseId")) {
            mask.show()
            let caseId = target.getAttribute("data-caseId");
            let QueryStringObj = {}
            QueryStringObj.CaseRecordId = caseId
            QueryStringObj.CloseId = 0
            axios.get('/case/state/'+caseId).then((res) => { 
              axios.get('/close/view?'+new URLSearchParams(QueryStringObj).toString()).then((res) => { 
                document.location.href = '/close/view?'+new URLSearchParams(QueryStringObj).toString()
              }).catch((error) => { 
                Swal.fire(error.response.data.msg)
              })       
            }).catch((error) => { 
              Swal.fire(error.response.data.msg)
            }).finally(() => { 
              mask.hide()
            })
          }
        }

        //delete
        if(target.getAttribute("class").indexOf("btn-DelCase") !== -1) {
          if(target.getAttribute("data-caseId")) {
            let caseId = target.getAttribute("data-caseId");
            axios.get('/case/state/'+caseId).then((res) => { 
              Swal.fire({
                title: '是否刪除個案。',
                showCancelButton: true,
                confirmButtonText: '確認',
                cancelButtonText: '取消',
              }).then((result) => {
                if (result.isConfirmed) {
                  axios.delete('/case',{ params: { id: caseId } }).then( res => {
                    Swal.fire(res.data.msg).then((result) => {
                      axios.get('/case').then((res) => { 
                        table.setData(res.data) 
                      }).catch((error) => { 
                        Swal.fire(error.response.data.msg) 
                      })
                    })
                  }).catch((error) => { 
                    Swal.fire(error.response.data.msg)
                  }).finally(() =>{
                    mask.hide()
                  })
                } 
              })
            }).catch((error) => { 
              Swal.fire(error.response.data.msg)
            }).finally(() => { 
              mask.hide()
            })

          }
        }
        //update
        if(target.getAttribute("class").indexOf("btn-CreatCase") !== -1) {
          if(target.getAttribute("data-caseId")) {
            let caseId = target.getAttribute("data-caseId");
            axios.get('/case/state/'+caseId).then((res) => { 
              Swal.fire({
                title: '是否修改個案。',
                showCancelButton: true,
                confirmButtonText: '確認',
                cancelButtonText: '取消',
              }).then((result) => {
                if (result.isConfirmed) {
                  axios.get('/case/view',{ params: { id: caseId } }).then(res => {
                    let LoadHTML = document.createElement("div")
                    LoadHTML.innerHTML = res.data
                    Array.from(LoadHTML.querySelectorAll('script')).forEach(element => {
                      let $script = document.createElement('script');
                      $script.text = element.text
                      LoadHTML.appendChild($script)
                    })
                    document.querySelector('body').prepend(LoadHTML)
                  }).catch((error) => { 
                    Swal.fire(error.response.data.msg)
                  }).finally(() =>{
                    mask.hide()
                  })
                } 
              })
            }).catch((error) => { 
              Swal.fire(error.response.data.msg)
            }).finally(() => { 
              mask.hide()
            })

          }
        }
        
        //晤談紀錄查詢
        if(target.getAttribute("class").indexOf("btn-infoTalk") !== -1) {
          console.dir("A")
          if(target.getAttribute("data-talkId")) {
            let QueryStringObj = {}
            QueryStringObj.CaseRecordId = 0
            QueryStringObj.CalendarId = 0
            QueryStringObj.RecordId = target.getAttribute("data-talkId");
            //document.location.href = '/talk/view?'+new URLSearchParams(QueryStringObj).toString()
            window.open('/talk/view?'+new URLSearchParams(QueryStringObj).toString());
          }
        }

      })
      caseTable = table
    })
