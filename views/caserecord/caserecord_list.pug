extends ../layout

block content
  .container
    .row
      .col
      nav(aria-label="breadcrumb")
        ol.breadcrumb
          li.breadcrumb-item 
            a(href="/") 首頁
          li.breadcrumb-item 個案資料
          li.breadcrumb-item.active 個案追蹤
    .row
      .col-4
        .input-group.mb-3
          span.input-group-text(id="inputGroup-memberUid") 學號
          input.form-control(type="text" placeholder="輸入學號" aria-label="輸入學號" aria-describedby="btn-search" name="txt-search" id="txt-search")
          button.btn.btn-outline-secondary(type="button" id="btn-search") 搜尋
    table.table#maintable
  script.
    let caseTable 
    document.addEventListener('DOMContentLoaded', function() {
      const table = new Tabulator("#maintable", {
        ajaxURL: "/case",
        ajaxConfig: "get",
        ajaxContentType: "json",
        layout: "fitDataTable",
        minHeight: 300,
        maxHeight : "100%",
        placeholder: "尚無資料",
        resizableColumnFit: true,
        pagination: true, //啟用分頁
        paginationSize: 10, //可選參數以請求每頁的特定行數
        columnDefaults: {
          headerHozAlign: "center",
          hozAlign: "center",
          headerSort: false,
        },
        columns: [
          {title: "#", formatter: "rownum", width: 50},
          {title: "學號", field: "memberUid" },
          {title: "學生姓名", field: "memberName"},
          {title: "性別", field: "memberSex"},
          {title: "系所年級", field: "memberDeptFull", hozAlign: "left"},
          {title: "個案身份", field: "refIdentity.content", hozAlign: "left"},
          {title: "個案來源", field: "refSource.content", hozAlign: "left"},
          {title: "個管員", field: "refcaseManage.username"},
          {title: "心理師", field: "refcaseAssign.username"},
          {title: "建立時間", field: "createdLocal"},
          {title: "案件進度", field: "isCloseName"},
          {title: "功能",field: "id",
            formatter: function(cell ,  formatterParams ){
              let value = cell.getValue()
              let buttonString = '<button class="btn btn-primary mx-1 btn-CreatTalk" type="button" data-caseId="'+value+'">晤談</button><button class="btn btn-secondary mx-1 btn-CloseCase" type="button" data-caseId="'+value+'">結案</button>'
              let auth = #{user.auth}
              if([1].indexOf(auth) !== -1)
                buttonString += '<button class="btn btn-success mx-1 btn-CreatCase" type="button" data-caseId="'+value+'">修改</button><button class="btn btn-danger mx-1 btn-DelCase" type="button" data-caseId="'+value+'">刪除</button>'
              return buttonString
            }
          },
        ],
      })
      
      document.querySelector('#btn-search').addEventListener('click',(e) => {
        mask.show()
        axios.get('/case/'+document.querySelector('#txt-search').value)
        .then((res) => { 
          table.setData(res.data);
        }).catch((error) => { 
          Swal.fire(error.response.data.msg)
        }).finally(() => { 
          mask.hide()
        })
      })

      document.getElementsByTagName("body")[0].addEventListener('click', function (event) {
        let target = event.target
        if(!target.getAttribute("class")) { return }

        //addrecord
        if(target.getAttribute("class").indexOf("btn-CreatTalk") !== -1) {
          if(target.getAttribute("data-caseId")) {
            let caseId = target.getAttribute("data-caseId");
            let QueryStringObj = {}
            QueryStringObj.CaseRecordId = caseId
            QueryStringObj.CalendarId = 0
            QueryStringObj.RecordId = 0
            document.location.href = '/talk/view?'+new URLSearchParams(QueryStringObj).toString()
          }
        }

        //
        if(target.getAttribute("class").indexOf("btn-CloseCase") !== -1) {
          console.dir('B')
        }
        //delete
        if(target.getAttribute("class").indexOf("btn-DelCase") !== -1) {
          if(target.getAttribute("data-caseId")) {
            let caseId = target.getAttribute("data-caseId");
            Swal.fire({
              title: '是否刪除個案。',
              showCancelButton: true,
              confirmButtonText: '確認',
              cancelButtonText: '取消',
            }).then((result) => {
              if (result.isConfirmed) {
                axios.delete('/case',{ params: { id: caseId } }).then( res => {
                  Swal.fire(res.data.msg).then((result) => {
                    axios.get('/case/all').then((res) => { table.setData(res.data) }).catch((error) => { Swal.fire(error.response.data.msg) })
                  })
                }).catch((error) => { 
                  Swal.fire(error.response.data.msg)
                }).finally(() =>{
                  mask.hide()
                })
              } 
            })
          }
        }
        //update
        if(target.getAttribute("class").indexOf("btn-CreatCase") !== -1) {
          if(target.getAttribute("data-caseId")) {
            let caseId = target.getAttribute("data-caseId");
            Swal.fire({
              title: '是否修改個案。',
              showCancelButton: true,
              confirmButtonText: '確認',
              cancelButtonText: '取消',
            }).then((result) => {
              if (result.isConfirmed) {
                axios.get('/case/view',{ params: { id: caseId } }).then(res => {
                  let LoadHTML = document.createElement("div")
                  LoadHTML.innerHTML = res.data
                  Array.from(LoadHTML.querySelectorAll('script')).forEach(element => {
                    let $script = document.createElement('script');
                    $script.text = element.text
                    LoadHTML.appendChild($script)
                  })
                  document.querySelector('body').prepend(LoadHTML)
                }).catch((error) => { 
                  Swal.fire(error.response.data.msg)
                }).finally(() =>{
                  mask.hide()
                })
              } 
            })
          }
        }
      })
      caseTable = table
    })