.modal.fade
  .modal-dialog.modal-dialog-centered
    .modal-content
      .modal-header
        if UserData.id === 0
          h1.modal-title.fs-5 新增使用者
        else
          h1.modal-title.fs-5 修改使用者
        button(type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close")
      .modal-body
        form(action="#" id="formData")
          input(type="hidden" name="uid" id="uid" value=UserData.id)
          .mb-3
            label.form-label 使用者帳號
            if UserData.id === 0
              input.form-control(type="text" name="account" id="account" maxlength="20" value=UserData.account ) 
            else
              input.form-control(type="text" name="account" id="account" maxlength="20" value=UserData.account readonly) 
          .mb-3
            label.form-label 使用者密碼
            input.form-control(type="password" name="password" id="password" maxlength="20" autocomplete="off")
          .mb-3
            label.form-label 使用者姓名
            if UserData.id === 0
              input.form-control(type="text" name="username" id="username" maxlength="20" value=UserData.username )
            else 
              input.form-control(type="text" name="username" id="username" maxlength="20" value=UserData.username readonly)
          .mb-3
            label.form-label 標籤顏色
            input.form-control(type="color" name="color" id="color" value=UserData.color )
          .mb-3
            label.form-label 文字顏色
            input.form-control(type="color" name="textColor" id="textColor" value=UserData.textColor )
          .mb-3
            label.form-label 使用者權限 
            select.form-select(name="userauthId" id="userauthId")
              each value in UserAuthList
                if UserData.UserAuth.id === value.id
                  option(value=value.id selected) #{value.titleName}
                else 
                  option(value=value.id) #{value.titleName}
          .form-check
            if UserData.isDisabled
              input.form-check-input(type="checkbox" name="isDisabled" id="isDisabled" value="1" checked)
            else 
              input.form-check-input(type="checkbox" name="isDisabled" id="isDisabled" value="1")
            label.form-check-label 是否停用
      .modal-footer
        if UserData.id === 0
          buttin.btn.btn-primary(type="button" id="btn_process" data-btn-type="add") 新增
        else
          buttin.btn.btn-success(type="button" id="btn_process" data-btn-type="edit") 修改
        buttin.btn.btn-secondary(type="button" data-bs-dismiss="modal") 取消
  script.
    (function(){
      //bs遠端模板載入
      let ModalElement = document.getElementsByClassName("modal")[0]
      let modalMethod = new bootstrap.Modal(ModalElement, {backdrop: 'static'})
      ModalElement.addEventListener('hidden.bs.modal', event => {  
        ModalElement.parentElement.parentElement.removeChild(ModalElement.parentNode) 
      })
      modalMethod.show()
      //新增與修改
      document.getElementById('btn_process').addEventListener('click', (e) => {
        let data = new FormData(document.getElementById('formData'));
        let methodType = ''
        let msgtxt = ''
        if(event.target.getAttribute("data-btn-type") === 'add') {
          msgtxt = "確認新增此" + document.getElementById('account').value + "使用者帳號"
          methodType = 'post'
        } else {
          msgtxt = "確認修改此" + document.getElementById('account').value + "使用者帳號"
          methodType = 'put'
        }
        Swal.fire({
          text: msgtxt,
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: '確定',
          cancelButtonText: '取消',
        }).then((result) => {
          if (result.isConfirmed) {
            mask.show()
            axios({
              method: methodType ,
              url: '/users',
              data: data,
            })
            .then((res) => {
              Swal.fire(res.data.msg).then((result) => {
                if(result.isConfirmed) {
                  location.reload()
                }
              })
            })
            .catch((error) => { Swal.fire('伺服器錯誤。') })
            .finally(() => {mask.hide()})
          }
        })     
      });
    })()