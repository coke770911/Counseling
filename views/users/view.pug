extends ../layout

block content
  .container
    nav(aria-label="breadcrumb")
      ol.breadcrumb
        li.breadcrumb-item 
          a(href="/") 首頁
        li.breadcrumb-item 系統設定
        li.breadcrumb-item.active 權限管理
    .row 
      .col.text-end.mb-2
        button.btn.btn-primary.btn-Detailed(type="button" data-id="0") 新增使用者
    .row 
      .col
        table.table#maintable
  script.
    document.addEventListener('DOMContentLoaded', function() {
      const table = new Tabulator("#maintable", {
        layout: "fitDataStretch",
        minHeight : 300 ,
        maxHeight: "100%",
        placeholder:"資料載入中",
        ajaxURL : "/users" ,
        ajaxConfig : "get" ,
        ajaxContentType: "json",
        columnDefaults: {
          headerHozAlign: "center",
          hozAlign: "center",
          headerSort: false ,
        },
        columns: [
          {title: "#", formatter: "rownum",width: '5%'},
          {title: "帳號", field: "account",width: '15%'},
          {title: "姓名", field: "username",width: '15%'},
          {title: "標籤顏色", field: "color",formatter:"color", width:90},
          {title: "文字顏色", field: "textColor",formatter:"color", width:90},
          {title: "系統身份", field: "UserAuth.titleName"},
          {title: "狀態", field: "isDisabledName"},
          {title: "最後變更日期", field: "updatedLocal"},
          {title: "功能",field: "id",
            formatter: function(cell ,  formatterParams ){
              let value = cell.getValue();
              return '<button type="button" class="btn btn-outline-success btn-Detailed" data-id="'+value+'">修改</button>';
            }
          },
        ],
      });
      //新增與修改彈窗
      document.getElementsByTagName("body")[0].addEventListener('click', function (event) {
        let target = event.target
        if(!target.getAttribute("class")) { return }
        if(target.getAttribute("class").indexOf("btn-Detailed") !== -1) {
          mask.show()
          axios.get('/users/detailed/'+target.getAttribute("data-id")).then((res) => {
            let LoadHTML = document.createElement("div")
            LoadHTML.innerHTML = res.data
            Array.from(LoadHTML.getElementsByTagName('script')).forEach(element => {
              let $script = document.createElement('script');
              $script.text = element.text
              LoadHTML.appendChild($script)
            })
            document.getElementsByTagName("body")[0].prepend(LoadHTML)
          }).catch((error) => { 
            Swal.fire('樣板發生錯誤。')
          }).finally(() =>{ mask.hide() })
        }
      })
    });